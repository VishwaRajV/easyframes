#!/usr/bin/env ruby

def ok cmd, expect
    actual = %x[./ef hex #{cmd}]
    actual.chomp!

    raise "Command './ef hex #{cmd}' exitted with #{$?.to_i}, expected 0" if $?.to_i != 0

    if actual != expect
        puts "Expected: #{expect}"
        puts "Actual:   #{actual}"
        raise "Wrong output"
    end

    %x[./ef pcap ./out.pcap #{cmd}]
    raise "Command './ef pcap #{cmd}' exitted with #{$?.to_i}, expected 0" if $?.to_i != 0

    puts "OK: #{cmd}"

    #%x[valgrind ./ef hex #{cmd}]
    #raise "Command './ef hex #{cmd}' exitted with #{$?.to_i}, expected 0" if $?.to_i != 0
end

%x{rm -f "./out.pcap"}
ok("eth", "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 0:1::2 smac 123", "00010000000200000000007b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 ctag vid 100", "000000000001000000000002810000640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 ctag       pcp 4 vid 0x100 ctag vid 100", "000000000001000000000002810081008100006400000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 ctag dei 1 pcp 4 vid 0x100 ctag vid 100", "000000000001000000000002810091008100006400000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 stag dei 1 pcp 4 vid 0x100 ctag vid 100", "00000000000100000000000288a891008100006400000000000000000000000000000000000000000000000000000000000000000000000000000000");

ok("eth dmac 1 smac 2 data pattern cnt 1", "000000000001000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 data pattern cnt 2", "000000000001000000000002000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 data pattern cnt 3", "000000000001000000000002000000010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 data pattern cnt 4", "000000000001000000000002000000010203000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 data pattern cnt 8", "000000000001000000000002000000010203040506070000000000000000000000000000000000000000000000000000000000000000000000000000");
ok("eth dmac 1 smac 2 data pattern cnt 0x20", "0000000000010000000000020000000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f0000000000000000000000000000");
ok("eth dmac 1 smac 2 data pattern cnt 0x40", "0000000000010000000000020000000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f");

ok("eth dmac 1 smac 2 ipv4 sip 1 dip 10.0.99.2 data pattern cnt 0x40", "000000000001000000000002080045000054000000001f009baa0000000100000000000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f");
ok("eth dmac 1 smac 2 ipv4 sip 1 dip 10.0.99.2 udp data pattern cnt 0x40", "00000000000100000000000208004500005c000000001f119b9100000001000000000000000000481b5a000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f");
ok("eth dmac 1 smac 2 ipv4 sip 1 dip 10.0.99.2 udp data ascii \"Hello World!\"", "000000000001000000000002080045000028000000001f119bc50000000100000000000000000014add648656c6c6f20576f726c6421000000000000");
ok("eth dmac 1 smac 2 ipv4 sip 1 dip 10.0.99.2 udp data ascii0 \"Hello World!\"", "000000000001000000000002080045000029000000001f119bc40000000100000000000000000015add448656c6c6f20576f726c6421000000000000");

ok("data hex 000000000000000000000000080045000028000000001f119bc60000000000000000000000000014add748656c6c6f20576f726c6421000000000000", "000000000000000000000000080045000028000000001f119bc60000000000000000000000000014add748656c6c6f20576f726c6421000000000000");
ok("eth ipv4 udp data ascii \"Hello World!\"", "000000000000000000000000080045000028000000001f119bc60000000000000000000000000014add748656c6c6f20576f726c6421000000000000");

